{"version":3,"file":"demo.js","sources":["webpack:///./main.js"],"sourcesContent":["// Function to generate Fibonacci sequence up to n numbers\nfunction fibonacci(n) {\n  let fibSequence = [0, 1];\n  for (let i = 2; i < n; i++) {\n    fibSequence.push(fibSequence[i - 1] + fibSequence[i - 2]);\n  }\n  return fibSequence;\n}\n\n// Function to check if a number is prime\nfunction isPrime(num) {\n  if (num <= 1) return false;\n  if (num <= 3) return true;\n\n  if (num % 2 === 0 || num % 3 === 0) return false;\n\n  let i = 5;\n  while (i * i <= num) {\n    if (num % i === 0 || num % (i + 2) === 0) return false;\n    i += 6;\n  }\n\n  return true;\n}\n\n// Function to calculate factorial of a number\nfunction factorial(n) {\n  if (n === 0 || n === 1) return 1;\n  let result = 1;\n  for (let i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;\n}\n\n// Function to generate random numbers\nfunction generateRandomNumbers(count) {\n  const randomNumbers = [];\n  for (let i = 0; i < count; i++) {\n    randomNumbers.push(Math.random());\n  }\n  return randomNumbers;\n}\n\n// Function to sort an array of numbers\nfunction sortNumbers(numbers) {\n  return numbers.sort((a, b) => a - b);\n}\n\n// Function to reverse a string\nfunction reverseString(str) {\n  return str.split(\"\").reverse().join(\"\");\n}\n\n// Benchmarking\nconsole.time(\"fibonacci\");\nconst fibSequence = fibonacci(1000); // Adjust the number as needed\nconsole.timeEnd(\"fibonacci\");\n\nconsole.time(\"primeNumbers\");\nconst primeNumbers = [];\nfor (let i = 0; i < fibSequence.length; i++) {\n  if (isPrime(fibSequence[i])) {\n    primeNumbers.push(fibSequence[i]);\n  }\n}\nconsole.timeEnd(\"primeNumbers\");\n\nconsole.time(\"factorial\");\nconst factResult = factorial(1000); // Adjust the number as needed\nconsole.timeEnd(\"factorial\");\n\nconsole.time(\"randomNumbers\");\nconst randomNumbers = generateRandomNumbers(10000); // Adjust the count as needed\nconsole.timeEnd(\"randomNumbers\");\n\nconsole.time(\"sortedNumbers\");\nconst sortedNumbers = sortNumbers(randomNumbers);\nconsole.timeEnd(\"sortedNumbers\");\n\nconsole.time(\"reverseString\");\nconst reversedString = reverseString(\"Hello, World!\");\nconsole.timeEnd(\"reverseString\");\n\nconsole.log(\"Prime numbers in Fibonacci sequence:\", primeNumbers);\nconsole.log(\"Factorial result:\", factResult);\nconsole.log(\"Reversed string:\", reversedString);\n"],"names":["console","time","fibSequence","fibonacci","n","i","push","timeEnd","primeNumbers","length","isPrime","num","factResult","factorial","result","randomNumbers","generateRandomNumbers","count","Math","random","numbers","sort","a","b","reversedString","str","split","reverse","join","log"],"mappings":"MAuDAA,QAAQC,IAAI,CAAC,aACb,IAAMC,EAAcC,AAvDpB,SAAmBC,CAAC,EAClB,IAAIF,EAAc,CAAC,EAAG,EAAE,CACxB,IAAK,IAAIG,EAAI,EAAGA,EAqDY,IArDLA,IACrBH,EAAYI,IAAI,CAACJ,CAAW,CAACG,EAAI,EAAE,CAAGH,CAAW,CAACG,EAAI,EAAE,EAE1D,OAAOH,CACT,EAiD8B,KAC9BF,QAAQO,OAAO,CAAC,aAEhBP,QAAQC,IAAI,CAAC,gBACb,IAAMO,EAAe,EAAE,CACvB,IAAK,IAAIH,EAAI,EAAGA,EAAIH,EAAYO,MAAM,CAAEJ,IAClCK,AApDN,UAAiBC,CAAG,EAClB,GAAIA,GAAO,EAAG,MAAO,GACrB,GAAIA,GAAO,EAAG,MAAO,GAErB,GAAIA,EAAM,GAAM,GAAKA,EAAM,GAAM,EAAG,MAAO,GAE3C,IAAIN,EAAI,EACR,KAAOA,EAAIA,GAAKM,GAAK,CACnB,GAAIA,EAAMN,GAAM,GAAKM,EAAON,CAAAA,EAAI,IAAO,EAAG,MAAO,GACjDA,GAAK,CACP,CAEA,MAAO,EACT,GAuCcH,CAAW,CAACG,EAAE,GACxBG,EAAaF,IAAI,CAACJ,CAAW,CAACG,EAAE,EAGpCL,QAAQO,OAAO,CAAC,gBAEhBP,QAAQC,IAAI,CAAC,aACb,IAAMW,EAAaC,AA3CnB,SAAmBT,CAAC,EAClB,GAAeA,AAAM,IAANA,EAAS,OAAO,EAC/B,IAAIU,EAAS,EACb,IAAK,IAAIT,EAAI,EAAGA,GAAKD,EAAGC,IACtBS,GAAUT,EAEZ,OAAOS,CACT,EAoC6B,KAC7Bd,QAAQO,OAAO,CAAC,aAEhBP,QAAQC,IAAI,CAAC,iBACb,IAAMc,EAAgBC,AArCtB,SAA+BC,CAAK,EAClC,IAAMF,EAAgB,EAAE,CACxB,IAAK,IAAIV,EAAI,EAAGA,EAmC0B,IAnCfA,IACzBU,EAAcT,IAAI,CAACY,KAAKC,MAAM,IAEhC,OAAOJ,CACT,EA+B4C,KAC5Cf,QAAQO,OAAO,CAAC,iBAEhBP,QAAQC,IAAI,CAAC,iBA9BJmB,AA+ByBL,EA/BjBM,IAAI,CAAC,CAACC,EAAGC,IAAMD,EAAIC,GAgCpCvB,QAAQO,OAAO,CAAC,iBAEhBP,QAAQC,IAAI,CAAC,iBACb,IAAMuB,EA9BGC,AA8B4B,gBA9BxBC,KAAK,CAAC,IAAIC,OAAO,GAAGC,IAAI,CAAC,IA+BtC5B,QAAQO,OAAO,CAAC,iBAEhBP,QAAQ6B,GAAG,CAAC,uCAAwCrB,GACpDR,QAAQ6B,GAAG,CAAC,oBAAqBjB,GACjCZ,QAAQ6B,GAAG,CAAC,mBAAoBL,G"}